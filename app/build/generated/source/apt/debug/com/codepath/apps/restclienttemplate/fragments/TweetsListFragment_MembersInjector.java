// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.codepath.apps.restclienttemplate.fragments;

import com.codepath.apps.restclienttemplate.network.TwitterClient;
import com.codepath.apps.restclienttemplate.utils.NetworkUtil;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class TweetsListFragment_MembersInjector
    implements MembersInjector<TweetsListFragment> {
  private final Provider<NetworkUtil> mNetworkUtilProvider;

  private final Provider<TwitterClient> mClientProvider;

  public TweetsListFragment_MembersInjector(
      Provider<NetworkUtil> mNetworkUtilProvider, Provider<TwitterClient> mClientProvider) {
    assert mNetworkUtilProvider != null;
    this.mNetworkUtilProvider = mNetworkUtilProvider;
    assert mClientProvider != null;
    this.mClientProvider = mClientProvider;
  }

  public static MembersInjector<TweetsListFragment> create(
      Provider<NetworkUtil> mNetworkUtilProvider, Provider<TwitterClient> mClientProvider) {
    return new TweetsListFragment_MembersInjector(mNetworkUtilProvider, mClientProvider);
  }

  @Override
  public void injectMembers(TweetsListFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.mNetworkUtil = mNetworkUtilProvider.get();
    instance.mClient = mClientProvider.get();
  }

  public static void injectMNetworkUtil(
      TweetsListFragment instance, Provider<NetworkUtil> mNetworkUtilProvider) {
    instance.mNetworkUtil = mNetworkUtilProvider.get();
  }

  public static void injectMClient(
      TweetsListFragment instance, Provider<TwitterClient> mClientProvider) {
    instance.mClient = mClientProvider.get();
  }
}
