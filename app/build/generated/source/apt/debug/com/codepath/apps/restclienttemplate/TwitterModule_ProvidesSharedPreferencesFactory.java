// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.codepath.apps.restclienttemplate;

import android.app.Application;
import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class TwitterModule_ProvidesSharedPreferencesFactory
    implements Factory<SharedPreferences> {
  private final TwitterModule module;

  private final Provider<Application> applicationProvider;

  public TwitterModule_ProvidesSharedPreferencesFactory(
      TwitterModule module, Provider<Application> applicationProvider) {
    assert module != null;
    this.module = module;
    assert applicationProvider != null;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public SharedPreferences get() {
    return Preconditions.checkNotNull(
        module.providesSharedPreferences(applicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SharedPreferences> create(
      TwitterModule module, Provider<Application> applicationProvider) {
    return new TwitterModule_ProvidesSharedPreferencesFactory(module, applicationProvider);
  }

  /** Proxies {@link TwitterModule#providesSharedPreferences(Application)}. */
  public static SharedPreferences proxyProvidesSharedPreferences(
      TwitterModule instance, Application application) {
    return instance.providesSharedPreferences(application);
  }
}
